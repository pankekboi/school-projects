"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_controller_1 = require("../controllers/user.controller");
const userRouter = express_1.default.Router();
userRouter.route('/login').post((req, res) => new user_controller_1.UserController().getUser(req, res));
userRouter.route('/checkUsername').post((req, res) => new user_controller_1.UserController().checkUsername(req, res));
userRouter.route('/register').post((req, res) => new user_controller_1.UserController().register(req, res));
userRouter.route('/addCustomer').post((req, res) => new user_controller_1.UserController().addCustomer(req, res));
userRouter.route('/addEnterprise').post((req, res) => new user_controller_1.UserController().addEnterprise(req, res));
userRouter.route('/checkEmail').post((req, res) => new user_controller_1.UserController().checkEmail(req, res));
userRouter.route('/getEnterpriseById').post((req, res) => new user_controller_1.UserController().getEnterpriseById(req, res));
userRouter.route('/getEnterpriseByPIB').post((req, res) => new user_controller_1.UserController().getEnterpriseByPIB(req, res));
userRouter.route('/getEnterprise').post((req, res) => new user_controller_1.UserController().getEnterprise(req, res));
userRouter.route('/getAllEnterprises').get((req, res) => new user_controller_1.UserController().getAllEnterprises(req, res));
userRouter.route('/getCustomer').post((req, res) => new user_controller_1.UserController().getCustomer(req, res));
userRouter.route('/getAllRequests').get((req, res) => new user_controller_1.UserController().getAllRequests(req, res));
userRouter.route('/updateEnterpriseData').post((req, res) => new user_controller_1.UserController().updateEnterpriseData(req, res));
userRouter.route('/changePassword').post((req, res) => new user_controller_1.UserController().changePassword(req, res));
userRouter.route('/getAllItems').post((req, res) => new user_controller_1.UserController().getAllItems(req, res));
userRouter.route('/getAllItemsStorageLocations').post((req, res) => new user_controller_1.UserController().getAllItemsStorageLocations(req, res));
userRouter.route('/addItem').post((req, res) => new user_controller_1.UserController().addItem(req, res));
userRouter.route('/changeItem').post((req, res) => new user_controller_1.UserController().changeItem(req, res));
userRouter.route('/removeItem').post((req, res) => new user_controller_1.UserController().removeItem(req, res));
userRouter.route('/updateStorageState').post((req, res) => new user_controller_1.UserController().updateStorageState(req, res));
userRouter.route('/updateStorageStateLocation').post((req, res) => new user_controller_1.UserController().updateStorageStateLocation(req, res));
exports.default = userRouter;
//# sourceMappingURL=user.routes.js.map