INFO  16:25:56,230 - Compiling source file: E:\PP1\DOMACI ZADATAK 2022\workspace\MJCompiler\test\program.mj
INFO  16:25:56,246 - #2 program
INFO  16:25:56,246 - #19 mojProgram
INFO  16:25:56,246 - #19 int
INFO  16:25:56,247 - #19 x
INFO  16:25:56,247 - #41 ,
INFO  16:25:56,248 - #19 y
INFO  16:25:56,248 - #45 [
INFO  16:25:56,248 - #46 ]
INFO  16:25:56,248 - #41 ,
INFO  16:25:56,248 - #19 z
INFO  16:25:56,248 - #39 ;
INFO  16:25:56,248 - #7 const
INFO  16:25:56,248 - #19 int
INFO  16:25:56,248 - #19 test1
INFO  16:25:56,248 - #36 =
INFO  16:25:56,248 - #20 1
INFO  16:25:56,249 - #41 ,
INFO  16:25:56,249 - #19 test2
INFO  16:25:56,249 - #36 =
INFO  16:25:56,249 - #20 5
INFO  16:25:56,249 - #39 ;
INFO  16:25:56,249 - #7 const
INFO  16:25:56,250 - #19 char
INFO  16:25:56,250 - #19 test3
INFO  16:25:56,250 - #36 =
INFO  16:25:56,250 - #21 a
INFO  16:25:56,250 - #41 ,
INFO  16:25:56,250 - #19 test4
INFO  16:25:56,250 - #36 =
INFO  16:25:56,250 - #21 b
INFO  16:25:56,250 - #41 ,
INFO  16:25:56,250 - #19 test5
INFO  16:25:56,251 - #36 =
INFO  16:25:56,251 - #21 c
INFO  16:25:56,251 - #39 ;
INFO  16:25:56,251 - #7 const
INFO  16:25:56,251 - #19 bool
INFO  16:25:56,251 - #19 test6
INFO  16:25:56,251 - #36 =
INFO  16:25:56,251 - #22 true
INFO  16:25:56,251 - #41 ,
INFO  16:25:56,251 - #19 test7
INFO  16:25:56,251 - #36 =
INFO  16:25:56,251 - #22 false
INFO  16:25:56,251 - #39 ;
INFO  16:25:56,251 - #47 {
INFO  16:25:56,251 - #50 void
INFO  16:25:56,252 - #19 main
INFO  16:25:56,252 - #43 (
INFO  16:25:56,252 - #44 )
INFO  16:25:56,252 - #47 {
INFO  16:25:56,252 - #19 x
INFO  16:25:56,253 - #36 =
INFO  16:25:56,253 - #19 y
INFO  16:25:56,254 - #45 [
INFO  16:25:56,254 - #20 0
INFO  16:25:56,254 - #46 ]
INFO  16:25:56,255 - #23 +
INFO  16:25:56,255 - #20 2
INFO  16:25:56,256 - #25 *
INFO  16:25:56,256 - #20 3
INFO  16:25:56,256 - #25 *
INFO  16:25:56,256 - #20 6
INFO  16:25:56,256 - #24 -
INFO  16:25:56,256 - #20 20
INFO  16:25:56,256 - #39 ;
INFO  16:25:56,257 - #19 zbir
INFO  16:25:56,257 - #43 (
INFO  16:25:56,257 - #19 x
INFO  16:25:56,257 - #41 ,
INFO  16:25:56,257 - #19 y
INFO  16:25:56,257 - #44 )
INFO  16:25:56,257 - #39 ;
INFO  16:25:56,257 - #19 z
INFO  16:25:56,257 - #37 ++
INFO  16:25:56,257 - #39 ;
INFO  16:25:56,257 - #19 x
INFO  16:25:56,257 - #38 --
INFO  16:25:56,257 - #39 ;
INFO  16:25:56,258 - #45 [
INFO  16:25:56,258 - #19 y
INFO  16:25:56,258 - #45 [
INFO  16:25:56,258 - #20 1
INFO  16:25:56,258 - #23 +
INFO  16:25:56,258 - #19 x
INFO  16:25:56,258 - #46 ]
INFO  16:25:56,258 - #41 ,
INFO  16:25:56,258 - #41 ,
INFO  16:25:56,258 - #41 ,
INFO  16:25:56,258 - #46 ]
INFO  16:25:56,259 - #36 =
INFO  16:25:56,259 - #19 y
INFO  16:25:56,259 - #39 ;
INFO  16:25:56,259 - #8 if
INFO  16:25:56,259 - #43 (
INFO  16:25:56,259 - #19 x
INFO  16:25:56,259 - #28 ==
INFO  16:25:56,259 - #19 z
INFO  16:25:56,260 - #35 ||
INFO  16:25:56,260 - #19 y
INFO  16:25:56,261 - #45 [
INFO  16:25:56,261 - #20 0
INFO  16:25:56,261 - #46 ]
INFO  16:25:56,261 - #30 >
INFO  16:25:56,261 - #20 1
INFO  16:25:56,261 - #34 &&
INFO  16:25:56,261 - #19 z
INFO  16:25:56,261 - #29 !=
INFO  16:25:56,261 - #20 1
INFO  16:25:56,261 - #44 )
INFO  16:25:56,262 - #19 x
INFO  16:25:56,262 - #36 =
INFO  16:25:56,262 - #20 1
INFO  16:25:56,262 - #39 ;
INFO  16:25:56,262 - #6 else
INFO  16:25:56,262 - #19 z
INFO  16:25:56,262 - #36 =
INFO  16:25:56,262 - #20 1
INFO  16:25:56,262 - #39 ;
INFO  16:25:56,262 - #10 while
INFO  16:25:56,262 - #43 (
INFO  16:25:56,262 - #19 z
INFO  16:25:56,262 - #44 )
INFO  16:25:56,262 - #19 z
INFO  16:25:56,263 - #38 --
INFO  16:25:56,263 - #39 ;
INFO  16:25:56,263 - #3 break
INFO  16:25:56,263 - #39 ;
INFO  16:25:56,263 - #14 return
INFO  16:25:56,263 - #19 x
INFO  16:25:56,263 - #23 +
INFO  16:25:56,263 - #19 z
INFO  16:25:56,263 - #39 ;
INFO  16:25:56,263 - #48 }
INFO  16:25:56,263 - #19 int
INFO  16:25:56,263 - #19 zbir
INFO  16:25:56,263 - #43 (
INFO  16:25:56,264 - #19 int
INFO  16:25:56,264 - #19 x
INFO  16:25:56,264 - #41 ,
INFO  16:25:56,264 - #19 int
INFO  16:25:56,264 - #19 y
INFO  16:25:56,264 - #44 )
INFO  16:25:56,264 - #47 {
INFO  16:25:56,264 - #48 }
INFO  16:25:56,264 - #50 void
INFO  16:25:56,264 - #19 testNeki
INFO  16:25:56,264 - #43 (
INFO  16:25:56,264 - #19 bool
INFO  16:25:56,264 - #19 m
INFO  16:25:56,264 - #44 )
INFO  16:25:56,264 - #19 int
INFO  16:25:56,264 - #19 prvi
INFO  16:25:56,264 - #45 [
INFO  16:25:56,264 - #46 ]
INFO  16:25:56,264 - #41 ,
INFO  16:25:56,264 - #19 drugi
INFO  16:25:56,264 - #45 [
INFO  16:25:56,264 - #46 ]
INFO  16:25:56,264 - #39 ;
INFO  16:25:56,265 - #19 bool
INFO  16:25:56,265 - #19 rezultat
INFO  16:25:56,265 - #39 ;
INFO  16:25:56,265 - #14 return
ERROR 16:25:56,265 - 
Sintaksna greska kod simbola 'return' na liniji 28
ERROR 16:25:56,265 - Fatalna greska, parsiranje se ne moze nastaviti kod simbola 'return' na liniji 28
