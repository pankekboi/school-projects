INFO  16:27:31,853 - Compiling source file: E:\PP1\DOMACI ZADATAK 2022\workspace\MJCompiler\test\program.mj
INFO  16:27:31,870 - #2 program
INFO  16:27:31,870 - #19 mojProgram
INFO  16:27:31,870 - #19 int
INFO  16:27:31,870 - #19 x
INFO  16:27:31,871 - #41 ,
INFO  16:27:31,871 - #19 y
INFO  16:27:31,871 - #45 [
INFO  16:27:31,871 - #46 ]
INFO  16:27:31,871 - #41 ,
INFO  16:27:31,872 - #19 z
INFO  16:27:31,872 - #39 ;
INFO  16:27:31,872 - #7 const
INFO  16:27:31,872 - #19 int
INFO  16:27:31,872 - #19 test1
INFO  16:27:31,872 - #36 =
INFO  16:27:31,872 - #20 1
INFO  16:27:31,872 - #41 ,
INFO  16:27:31,873 - #19 test2
INFO  16:27:31,873 - #36 =
INFO  16:27:31,873 - #20 5
INFO  16:27:31,873 - #39 ;
INFO  16:27:31,873 - #7 const
INFO  16:27:31,874 - #19 char
INFO  16:27:31,874 - #19 test3
INFO  16:27:31,875 - #36 =
INFO  16:27:31,875 - #21 a
INFO  16:27:31,875 - #41 ,
INFO  16:27:31,875 - #19 test4
INFO  16:27:31,875 - #36 =
INFO  16:27:31,875 - #21 b
INFO  16:27:31,875 - #41 ,
INFO  16:27:31,875 - #19 test5
INFO  16:27:31,875 - #36 =
INFO  16:27:31,875 - #21 c
INFO  16:27:31,875 - #39 ;
INFO  16:27:31,875 - #7 const
INFO  16:27:31,875 - #19 bool
INFO  16:27:31,875 - #19 test6
INFO  16:27:31,875 - #36 =
INFO  16:27:31,876 - #22 true
INFO  16:27:31,876 - #41 ,
INFO  16:27:31,876 - #19 test7
INFO  16:27:31,876 - #36 =
INFO  16:27:31,876 - #22 false
INFO  16:27:31,876 - #39 ;
INFO  16:27:31,876 - #47 {
INFO  16:27:31,876 - #50 void
INFO  16:27:31,876 - #19 main
INFO  16:27:31,876 - #43 (
INFO  16:27:31,877 - #44 )
INFO  16:27:31,877 - #47 {
INFO  16:27:31,877 - #19 x
INFO  16:27:31,877 - #36 =
INFO  16:27:31,878 - #19 y
INFO  16:27:31,879 - #45 [
INFO  16:27:31,879 - #20 0
INFO  16:27:31,879 - #46 ]
INFO  16:27:31,879 - #23 +
INFO  16:27:31,880 - #20 2
INFO  16:27:31,880 - #25 *
INFO  16:27:31,880 - #20 3
INFO  16:27:31,881 - #25 *
INFO  16:27:31,881 - #20 6
INFO  16:27:31,881 - #24 -
INFO  16:27:31,881 - #20 20
INFO  16:27:31,881 - #39 ;
INFO  16:27:31,881 - #19 zbir
INFO  16:27:31,881 - #43 (
INFO  16:27:31,881 - #19 x
INFO  16:27:31,881 - #41 ,
INFO  16:27:31,882 - #19 y
INFO  16:27:31,882 - #44 )
INFO  16:27:31,882 - #39 ;
INFO  16:27:31,882 - #19 z
INFO  16:27:31,882 - #37 ++
INFO  16:27:31,882 - #39 ;
INFO  16:27:31,882 - #19 x
INFO  16:27:31,882 - #38 --
INFO  16:27:31,882 - #39 ;
INFO  16:27:31,882 - #45 [
INFO  16:27:31,882 - #19 y
INFO  16:27:31,882 - #45 [
INFO  16:27:31,882 - #20 1
INFO  16:27:31,882 - #23 +
INFO  16:27:31,882 - #19 x
INFO  16:27:31,882 - #46 ]
INFO  16:27:31,883 - #41 ,
INFO  16:27:31,883 - #41 ,
INFO  16:27:31,883 - #41 ,
INFO  16:27:31,883 - #46 ]
INFO  16:27:31,883 - #36 =
INFO  16:27:31,883 - #19 y
INFO  16:27:31,883 - #39 ;
INFO  16:27:31,883 - #8 if
INFO  16:27:31,883 - #43 (
INFO  16:27:31,883 - #19 x
INFO  16:27:31,883 - #28 ==
INFO  16:27:31,884 - #19 z
INFO  16:27:31,884 - #35 ||
INFO  16:27:31,885 - #19 y
INFO  16:27:31,885 - #45 [
INFO  16:27:31,885 - #20 0
INFO  16:27:31,885 - #46 ]
INFO  16:27:31,885 - #30 >
INFO  16:27:31,885 - #20 1
INFO  16:27:31,885 - #34 &&
INFO  16:27:31,885 - #19 z
INFO  16:27:31,885 - #29 !=
INFO  16:27:31,885 - #20 1
INFO  16:27:31,886 - #44 )
INFO  16:27:31,886 - #19 x
INFO  16:27:31,886 - #36 =
INFO  16:27:31,886 - #20 1
INFO  16:27:31,886 - #39 ;
INFO  16:27:31,886 - #6 else
INFO  16:27:31,886 - #19 z
INFO  16:27:31,886 - #36 =
INFO  16:27:31,886 - #20 1
INFO  16:27:31,886 - #39 ;
INFO  16:27:31,886 - #10 while
INFO  16:27:31,887 - #43 (
INFO  16:27:31,887 - #19 z
INFO  16:27:31,887 - #44 )
INFO  16:27:31,887 - #19 z
INFO  16:27:31,887 - #38 --
INFO  16:27:31,887 - #39 ;
INFO  16:27:31,887 - #3 break
INFO  16:27:31,887 - #39 ;
INFO  16:27:31,887 - #14 return
INFO  16:27:31,887 - #19 x
INFO  16:27:31,887 - #23 +
INFO  16:27:31,887 - #19 z
INFO  16:27:31,888 - #39 ;
INFO  16:27:31,888 - #48 }
INFO  16:27:31,888 - #19 int
INFO  16:27:31,888 - #19 zbir
INFO  16:27:31,888 - #43 (
INFO  16:27:31,888 - #19 int
INFO  16:27:31,888 - #19 x
INFO  16:27:31,888 - #41 ,
INFO  16:27:31,888 - #19 int
INFO  16:27:31,888 - #19 y
INFO  16:27:31,888 - #44 )
INFO  16:27:31,888 - #47 {
INFO  16:27:31,888 - #48 }
INFO  16:27:31,888 - #50 void
INFO  16:27:31,888 - #19 testNeki
INFO  16:27:31,888 - #43 (
INFO  16:27:31,889 - #19 bool
INFO  16:27:31,889 - #19 m
INFO  16:27:31,889 - #44 )
INFO  16:27:31,889 - #19 int
INFO  16:27:31,889 - #19 prvi
INFO  16:27:31,889 - #45 [
INFO  16:27:31,889 - #46 ]
INFO  16:27:31,889 - #41 ,
INFO  16:27:31,889 - #19 drugi
INFO  16:27:31,889 - #45 [
INFO  16:27:31,889 - #46 ]
INFO  16:27:31,889 - #39 ;
INFO  16:27:31,889 - #19 bool
INFO  16:27:31,889 - #19 rezultat
INFO  16:27:31,889 - #39 ;
INFO  16:27:31,889 - #14 return
ERROR 16:27:31,889 - 
Sintaksna greska kod simbola 'return' na liniji 28
ERROR 16:27:31,889 - Fatalna greska, parsiranje se ne moze nastaviti kod simbola 'return' na liniji 28
